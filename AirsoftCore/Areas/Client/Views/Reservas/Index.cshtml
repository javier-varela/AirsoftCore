@model IEnumerable<Reserva>




<div class="container d-flex flex-column gap-4 align-items-start" style="max-width:1024px">
    <h1>
        Reservas
    </h1>

    <a asp-controller="Home" asp-action="Canchas" class="btn btn-primary">Agregar <i class="bi bi-plus-lg"></i></a>
    <table class="table table-striped border shadow">
        <thead>
            <tr class="bg-primary text-white">
                <th scope="col">Fecha</th>
                <th scope="col">Duracion(Horas)</th>
                <th scope="col">Precio</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr></tr>
            @if (Model.Count() > 0)
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FechaHora)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DuracionHoras)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Precio)
                        </td>

                  

                        <td>
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <button type="button" class="btn btn-danger" onclick=Delete("@item.Id")>Delete</button>
                        </td>
                    </tr>

                }


            }
            else
            {
                <tr scope="col">
                    <td>   No Tienes Reservas</td>
                 
                </tr>
            }
        </tbody>


    </table>


</div>

@section Scripts{
    @if (TempData["Succes"] != null)
    {
        <script>
            Swal.fire({
                title: '¡Éxito!',
                text: '@TempData["Succes"]',
                icon: 'success',
                confirmButtonText: 'Genial'
            })
        </script>
    }
    @if (TempData["Error"] != null)
    {
        <script>
            Swal.fire({
                title: '¡Error!',
                text: '@TempData["Error"]',
                icon: 'error',
                confirmButtonText: 'Ok'
            })
        </script>
    }
    <script>


        function Delete(id) {
            Swal.fire({
                title: '¡Eliminar!',
                text: "Estas a punto de Eliminar una reserva!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {

                if (result.isConfirmed) {
                    fetch(`/Client/Reservas/Delete/${id}`, {
                        method: "DELETE",
                    }).then(response => response.json()).then(response => {
                        // Comprueba la respuesta del servidor.
                        console.log(response)
                        if (response.succes) {
                            Swal.fire({
                                icon: 'success',
                                title: '!Eliminado!',
                                text: response.message,
                                confirmButtonText:
                                    `<a><i class="fa fa-thumbs-up"></i> Great!</a>`,

                            }
                            ).then(()=>location.reload())

                        } else {
                            // Si la respuesta no es exitosa, muestra un mensaje de error.
                            Swal.fire(
                                '!Error!',
                                response.message,
                                'error'
                            )
                        }
                    });
                }
            })

        }
    </script>

}