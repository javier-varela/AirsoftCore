@model AirsoftCore.Models.ViewModels.ClientCarritoViewModel




<div class="container d-flex flex-column gap-4 align-items-start" style="max-width:1024px">
    <h1>
        Carrito
    </h1>

    <a asp-controller="Home" class="btn btn-primary">Agregar <i class="bi bi-plus-lg"></i></a>
    <table class="table table-striped border shadow">
        <thead>
            <tr class="bg-primary text-white">
                <th scope="col">Nombre</th>
                <th scope="col">Cantidad</th>
                <th scope="col">Valor Unitario</th>
                <th scope="col">Valor Total</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr>Tus Puntos: @Model.PuntosUsuario</tr>
            @if (Model.ProductosCarritoVM.Count() > 0)
            {
                @foreach (var item in Model.ProductosCarritoVM)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductoCarrito.Producto.Nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductoCarrito.Cantidad)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ProductoCarrito.Producto.Precio)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Total)
                        </td>

                        <td>
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ProductoCarrito.Id">Edit</a>
                            <button type="button" class="btn btn-danger" onclick=Delete("@item.ProductoCarrito.Id")>Delete</button>
                        </td>
                    </tr>

                }
                <tr class="">
                    <td></td>
                    <td></td>
                    <td></td>
                    <td> <span class="fw-bold">Total Carrito: </span> @Model.Total</td>
                   <td></td>
                  
                </tr>

            }
            else
            {
                <tr scope="col">
                    No Hay Productos en el carrito
                </tr>
            }
        </tbody>


    </table>

    <button onclick=Pagar() type="button" class="btn btn-success">Pagar Carrito</button>

</div>

@section Scripts{
    @if (TempData["SuccesAdd"] != null)
    {
        <script>
            Swal.fire({
                title: '¡Éxito!',
                text: '@TempData["SuccesAdd"]',
                icon: 'success',
                confirmButtonText: 'Genial'
            })
        </script>
    }
    <script>

        function Pagar() {
            console.log("pagando")
            fetch(`/Client/Carrito/Pagar`, {
                method: "POST",
            }).then(response => response.json()).then(response => {
                // Comprueba la respuesta del servidor.
                console.log(response)
                if (response.succes) {
                    Swal.fire({
                        icon: 'success',
                        title: '!Eliminado!',
                        text: response.message,
                        confirmButtonText:
                            `<a href="/Client/Carrito"><i class="fa fa-thumbs-up"></i> Great!</a>`,

                    }
                    )

                } else {
                    // Si la respuesta no es exitosa, muestra un mensaje de error.
                    Swal.fire(
                        '!Error!',
                        response.message,
                        'error'
                    )
                }
            });
        }

        function Delete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then(async (result) => {

                if (result.isConfirmed) {
                    fetch(`/Client/Carrito/Delete/${id}`, {
                        method: "DELETE",
                    }).then(response => response.json()).then(response => {
                        // Comprueba la respuesta del servidor.
                        console.log(response)
                        if (response.succes) {
                            Swal.fire({
                                icon: 'success',
                                title: '!Eliminado!',
                                text: response.message,
                                confirmButtonText:
                                    `<a href="/Client/Carrito"><i class="fa fa-thumbs-up"></i> Great!</a>`,

                            }
                            )

                        } else {
                            // Si la respuesta no es exitosa, muestra un mensaje de error.
                            Swal.fire(
                                '!Error!',
                                response.message,
                                'error'
                            )
                        }
                    });
                }
            })

        }
    </script>

}
